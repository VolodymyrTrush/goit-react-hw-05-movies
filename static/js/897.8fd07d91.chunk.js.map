{"version":3,"file":"static/js/897.8fd07d91.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieDetailsList/MovieDetailsList.styled.js","components/MovieDetailsList/MovieDetailsList.jsx","components/ActionInfo/ActionInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","constants/constants.js"],"sourcesContent":["\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px;\n  margin-bottom: 8px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 1px solid #ccc;\n  cursor: pointer;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiChevronDoubleLeft } from \"react-icons/hi\";\nimport { StyledLink } from 'components/BackLink/BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n    return (\n        <StyledLink to={to}>\n            <HiChevronDoubleLeft size=\"24\" />\n            {children}\n        </StyledLink>\n    );\n};\n\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\npadding-bottom: 20px;\nborder-bottom: 1px solid #ccc;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  width: 325px;\n  height: auto;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: fit-content;\n  margin-left: 30px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n`;\n\nexport const Label = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 0px;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  margin-top: 8px;\n`;\n\n","\nimport { Image, Label, OverviewText, Wrapper, Description, Title } from './MovieDetailsList.styled';\n\nexport const MovieDetailsList = ({ movie }) => {\n\n  const { title, poster_path, vote_average, overview, genres } = movie;\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <Wrapper>\n      <Image src={poster_path ?\n        `https://image.tmdb.org/t/p/w300${poster_path}`\n        : 'https://i.ibb.co/dJhXHZt/filmoteka.png'} alt={title}\n      />\n      <Description>\n        <Title>{title}</Title>\n        <Label>User score: {Math.round(vote_average * 10)} %</Label>\n        <Label>Overview</Label>\n        <OverviewText>{overview}</OverviewText>\n        <Label>Genres</Label>\n        <p>{movieGenres}</p>\n      </Description>\n    </Wrapper>\n  )\n};\n\n\n","import { useLocation, NavLink } from 'react-router-dom';\n\nexport const ActionInfo = () => {\n  const location = useLocation();\n  return (\n    <ul>\n      <li>\n        <NavLink to=\"cast\" state={{ from: location.state.from }}>Cast</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"reviews\" state={{ from: location.state.from }}>Reviews</NavLink>\n      </li>\n    </ul>\n  )\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useState, useEffect} from 'react';\nimport { getMoviesById } from \"../../services/api\";\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieDetailsList } from 'components/MovieDetailsList/MovieDetailsList';\nimport { ActionInfo } from 'components/ActionInfo/ActionInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMoviesById(movieId).then(setMovie);\n  }\n    , [movieId]);\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <BackLink to={goBack}>Go Back</BackLink >\n\n      <MovieDetailsList movie={movie} />\n      \n      <h4>Additional information</h4>\n      <ActionInfo />\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n\n","import axios from 'axios';\nimport { BASE_URL } from 'constants/constants';\nimport { API_KEY } from 'constants/constants';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = async () => {\n  try {\n    const response = await customAxios.get(`trending/movie/day` )\n    return response.data.results;\n  } catch {\n     toast.error('error');\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n      const response = await customAxios.get(`search/movie`, {\n      params: { query: query}\n    });\n    return response.data.results;\n   } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMoviesById = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}`);\n    return response.data;\n   } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/credits`);\n    return response.data.cast;\n     } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/reviews`);\n    return response.data.results;\n  } catch {\n    toast.error('error');\n  }\n};","\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = `ed13542cc98255e453f3d93d2dcaa225`;\n\n\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Wrapper","Image","Description","Title","Label","OverviewText","MovieDetailsList","movie","title","poster_path","vote_average","overview","movieGenres","genres","map","genre","name","join","src","alt","Math","round","ActionInfo","location","useLocation","state","from","movieId","useParams","useState","setMovie","goBack","useEffect","getMoviesById","then","Suspense","fallback","customAxios","axios","baseURL","params","api_key","trendingMovies","get","response","data","results","toast","searchMovies","query","id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}