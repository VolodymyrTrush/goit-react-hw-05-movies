{"version":3,"file":"static/js/765.e27ef411.chunk.js","mappings":"yNAEaA,EAAWC,EAAAA,GAAAA,GAAH,8FAORC,EAAqBD,EAAAA,GAAAA,EAAH,2C,wHCPlBE,E,QAAWF,GAAAA,GAAH,8D,SCwBrB,EAtBqB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACdC,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,UAAWC,EAASH,EAATG,KAEjC,OACE,UAACJ,EAAD,WACGE,IACC,gBAAKG,IAAG,yCAAoCH,GAAgBI,IAAI,MAElE,uBAAIF,KACJ,sCAAcD,S,UCsBpB,EA7Ba,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYN,GAASO,MAAK,SAAAC,GACpBC,MAAMC,QAAQF,IAChBJ,EAAQI,QAGX,CAACR,KAGF,yBACGG,GACC,SAAC,IAAD,UACGA,EAAKQ,KAAI,SAAAC,GACR,OAAO,SAAC,EAAD,CAA0BlB,KAAMkB,GAAbA,EAAGC,UAIjC,SAAC,IAAD,mD,8NCxBRC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CAAEC,QAAS,qCAGRC,EAAgB,mCAAG,+GAELH,IAAAA,IAAU,sBAAuBC,GAF5B,cAEtBG,EAFsB,OAGtBC,EAAaD,EAASxB,KAAK0B,QAHL,kBAIrBD,GAJqB,gCAM5BE,EAAAA,GAAAA,MAAY,kCANgB,yDAAH,qDAUhBC,EAAW,mCAAG,WAAMC,GAAN,kGAEAT,IAAAA,IAAA,iBAAoBS,GAAUR,GAF9B,cAEjBG,EAFiB,OAIjBM,EAAeN,EAASxB,KAJP,kBAKhB8B,GALgB,gCAOvBH,EAAAA,GAAAA,MAAY,kCAPW,yDAAH,sDAWXf,EAAW,mCAAG,WAAMiB,GAAN,kGAEAT,IAAAA,IAAA,iBAAoBS,EAApB,YAAsCR,GAFtC,cAEjBG,EAFiB,OAGjBO,EAAWP,EAASxB,KAAKS,KAHR,kBAIhBsB,GAJgB,gCAMvBJ,EAAAA,GAAAA,MAAY,kCANW,yDAAH,sDAUXK,EAAc,mCAAG,WAAMH,GAAN,kGAEHT,IAAAA,IAAA,iBAAoBS,EAApB,YAAsCR,GAFnC,cAEpBG,EAFoB,OAGpBS,EAAcT,EAASxB,KAAK0B,QAHR,kBAInBO,GAJmB,gCAM1BN,EAAAA,GAAAA,MAAY,kCANc,yDAAH,sDAUdO,EAAc,mCAAG,WAAMC,GAAN,kGAEHf,IAAAA,IAAA,gBAA2B,CAChDC,QAAO,kBACFA,EAAOA,QADN,IAEJc,MAAOA,MALe,cAEpBX,EAFoB,OASpBY,EAAeZ,EAASxB,KAAK0B,QATT,kBAUnBU,GAVmB,gCAY1BT,EAAAA,GAAAA,MAAY,kCAZc,yDAAH","sources":["pages/MovieDetails/Cast/Cast.styled.jsx","components/CastListItem/CastListItem.styled.jsx","components/CastListItem/CastListItem.js","pages/MovieDetails/Cast/Cast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n`;\n\nexport const StyledErrorMessage = styled.p`\n  padding: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  flex: 1 1 calc((100% / 3) - 2rem);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CastItem } from './CastListItem.styled';\n\nconst CastListItem = ({ data }) => {\n  const { profile_path, character, name } = data;\n\n  return (\n    <CastItem>\n      {profile_path && (\n        <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"\" />\n      )}\n      <p>{name}</p>\n      <p>Character:{character}</p>\n    </CastItem>\n  );\n};\n\nCastListItem.propTypes = {\n  data: PropTypes.shape({\n    profile_path: PropTypes.string,\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default CastListItem;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCast } from 'services/api';\nimport CastListItem from 'components/CastListItem';\nimport { CastList, StyledErrorMessage } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getFilmCast(movieId).then(res => {\n      if (Array.isArray(res)) {\n        setCast(res);\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast ? (\n        <CastList>\n          {cast.map(el => {\n            return <CastListItem key={el.id} data={el} />;\n          })}\n        </CastList>\n      ) : (\n        <StyledErrorMessage>\n          Sorry, we don't have information\n        </StyledErrorMessage>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: { api_key: '6b956d9320e8e098b01748da89295179' },\n};\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', params);\n    const filmsArray = response.data.results;\n    return filmsArray;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmById = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}`, params);\n\n    const filmsDetails = response.data;\n    return filmsDetails;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmCast = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}/credits`, params);\n    const filmCast = response.data.cast;\n    return filmCast;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmReviews = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}/reviews`, params);\n    const filmReviews = response.data.results;\n    return filmReviews;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmByQuery = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        ...params.params,\n        query: query,\n      },\n    });\n\n    const filmsByQuery = response.data.results;\n    return filmsByQuery;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\n\n\n"],"names":["CastList","styled","StyledErrorMessage","CastItem","data","profile_path","character","name","src","alt","movieId","useParams","useState","cast","setCast","useEffect","getFilmCast","then","res","Array","isArray","map","el","id","axios","params","api_key","getTrendingFilms","response","filmsArray","results","toast","getFilmById","filmId","filmsDetails","filmCast","getFilmReviews","filmReviews","getFilmByQuery","query","filmsByQuery"],"sourceRoot":""}