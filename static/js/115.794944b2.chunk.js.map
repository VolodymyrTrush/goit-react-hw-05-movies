{"version":3,"file":"static/js/115.794944b2.chunk.js","mappings":"wPAEaA,EAAMC,EAAAA,GAAAA,IAAH,yFAMHC,EAAOD,EAAAA,GAAAA,GAAH,qHAOJE,EAAWF,EAAAA,GAAAA,GAAH,wN,SCbRG,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACH,EAAD,UACGG,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACP,EAAD,WAEGK,IACC,SAACR,EAAD,CAAKW,IAAG,0CAAqCH,GAAgBI,IAAKH,KAElED,IACA,SAACR,EAAD,CAAKW,IAAG,0EAA6EC,IAAKH,KAG5F,uBAAIA,KACJ,uCAAeC,OAVFH,SCavB,EAda,WACZ,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,IAAaL,GAASM,KAAKH,KACzB,CAACH,KAGF,SAACT,EAAD,CAAUC,KAAMA,M,oNCRbe,G,QAAcC,IAAAA,OAAa,CAC/BC,QCNsB,gCDOtBC,OAAQ,CACNC,QCPgB,uCDWPC,EAAc,mCAAG,6GAEHL,EAAYM,IAAZ,sBAFG,cAEpBC,EAFoB,yBAGnBA,EAASC,KAAKC,SAHK,gCAKzBC,EAAAA,GAAAA,MAAY,SALa,yDAAH,qDASdC,EAAY,mCAAG,WAAOC,GAAP,gGAECZ,EAAYM,IAAZ,eAAgC,CACvDH,OAAQ,CAAES,MAAOA,KAHK,cAEhBL,EAFgB,yBAKjBA,EAASC,KAAKC,SALG,gCAOxBC,EAAAA,GAAAA,MAAY,SAPY,yDAAH,sDAWZG,EAAa,mCAAG,WAAO1B,GAAP,gGAEFa,EAAYM,IAAZ,gBAAyBnB,IAFvB,cAEnBoB,EAFmB,yBAGlBA,EAASC,MAHS,gCAKzBE,EAAAA,GAAAA,MAAY,SALa,yDAAH,sDASbZ,EAAY,mCAAG,WAAOX,GAAP,gGAEDa,EAAYM,IAAZ,gBAAyBnB,EAAzB,aAFC,cAElBoB,EAFkB,yBAGjBA,EAASC,KAAKvB,MAHG,gCAKxByB,EAAAA,GAAAA,MAAY,SALY,yDAAH,sDASZI,EAAe,mCAAG,WAAO3B,GAAP,gGAEJa,EAAYM,IAAZ,gBAAyBnB,EAAzB,aAFI,cAErBoB,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,EAAAA,GAAAA,MAAY,SALe,yDAAH","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/MovieDetails/Cast/Cast.jsx","services/api.js","constants/constants.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Img = styled.img`\n    display: block;\n    max-width: 50%;\n    height: auto;    \n`;\n\nexport const List = styled.ul`\n    margin-top: 16px;\n    display: flex;\n    flex-wrap: wrap;\n    width: 950px;     \n    `;\n\nexport const CastItem = styled.li`\n    max-width: 280px;\n    display: flex;\n    flex-direction: column ;    \n    margin-right: 16px;\n    margin-bottom: 16px;\n    list-style: none;\n     > p{\n        margin: 4px;\n     }\n`;","import { List, CastItem, Img } from 'components/CastList/CastList.styled';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <CastItem key={id}>\n                \n          {profile_path && (\n            <Img src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt={name} />\n          )}\n          {!profile_path && (\n            <Img src={`https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png`} alt={name} />\n          )}\n                            \n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </CastItem>\n      ))}\n    </List>\n  )\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from 'services/api';\nimport { CastList } from 'components/CastList/CastList';\n\nconst Cast = () => {\n\tconst { movieId } = useParams();\n\tconst [cast, setCast] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetMovieCast(movieId).then(setCast)\n\t}, [movieId])\n\treturn (\n\t    \n\t\t\t<CastList cast={cast}/>      \n\t\t\n\t);\n};\n\nexport default Cast;\n\n\n","import axios from 'axios';\nimport { BASE_URL } from 'constants/constants';\nimport { API_KEY } from 'constants/constants';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = async () => {\n  try {\n    const response = await customAxios.get(`trending/movie/day` )\n    return response.data.results;\n  } catch {\n     toast.error('error');\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n      const response = await customAxios.get(`search/movie`, {\n      params: { query: query}\n    });\n    return response.data.results;\n   } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMoviesById = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}`);\n    return response.data;\n   } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/credits`);\n    return response.data.cast;\n     } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/reviews`);\n    return response.data.results;\n  } catch {\n    toast.error('error');\n  }\n};","\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = `ed13542cc98255e453f3d93d2dcaa225`;\n\n\n"],"names":["Img","styled","List","CastItem","CastList","cast","map","id","profile_path","name","character","src","alt","movieId","useParams","useState","setCast","useEffect","getMovieCast","then","customAxios","axios","baseURL","params","api_key","trendingMovies","get","response","data","results","toast","searchMovies","query","getMoviesById","getMovieReviews"],"sourceRoot":""}