{"version":3,"file":"static/js/429.94ee5a55.chunk.js","mappings":"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","sources":["components/Section.jsx","service/api.js","views/MovieDetails/MovieDetails.styled.jsx","views/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: { api_key: '6b956d9320e8e098b01748da89295179' },\n};\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', params);\n    const filmsArray = response.data.results;\n    return filmsArray;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmById = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}`, params);\n\n    const filmsDetails = response.data;\n    return filmsDetails;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmCast = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}/credits`, params);\n    const filmCast = response.data.cast;\n    return filmCast;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmReviews = async filmId => {\n  try {\n    const response = await axios.get(`/movie/${filmId}/reviews`, params);\n    const filmReviews = response.data.results;\n    return filmReviews;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n\nexport const getFilmByQuery = async query => {\n  try {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        ...params.params,\n        query: query,\n      },\n    });\n\n    const filmsByQuery = response.data.results;\n    return filmsByQuery;\n  } catch (error) {\n    toast.error('Ups... Something went wrong :(');\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: block;\n  margin-top: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n`;\n\nexport const FilmDetailsbox = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n\nexport const FilmInfoBox = styled.div`\n  padding: 20px;\n`;\n\nexport const PageTitle = styled.h2`\n  margin-bottom: 16px;\n`;\n\nexport const FilmText = styled.p`\n  margin-bottom: 12px;\n`;\n\nexport const FilmSubTitle = styled.h3`\n  margin-bottom: 12px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  font-size: 16px;\n`;\n\nexport const LinkBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getFilmById } from 'service/api';\nimport { Section } from 'components/Section';\nimport {\n  GoBackLink,\n  Image,\n  FilmDetailsbox,\n  FilmInfoBox,\n  PageTitle,\n  FilmText,\n  FilmSubTitle,\n  StyledLink,\n  LinkBox,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [filmDetails, setАilmDetails] = useState('');\n\n  console.log(location);\n\n  useEffect(() => {\n    getFilmById(movieId).then(res => {\n      if (res) {\n        return setАilmDetails(res);\n      }\n    });\n  }, [movieId]);\n\n  const { genres, title, vote_average, overview, release_date, poster_path } =\n    filmDetails;\n\n  return (\n    <>\n      <GoBackLink to={location?.state?.from ?? '/'}>Go back</GoBackLink>\n      {filmDetails && (\n        <div>\n          <Section>\n            <FilmDetailsbox>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt=\"poster\"\n              />\n              <FilmInfoBox>\n                <PageTitle>\n                  {title} ({release_date.substring(0, 4)})\n                </PageTitle>\n                <FilmText>User Score: {vote_average * 10}%</FilmText>\n                <FilmSubTitle>Overview</FilmSubTitle>\n                <FilmText>{overview}</FilmText>\n                <FilmSubTitle>Genres</FilmSubTitle>\n                <FilmText>{genres.map(genre => genre.name).join(' ')}</FilmText>\n              </FilmInfoBox>\n            </FilmDetailsbox>\n          </Section>\n          <Section>\n            <PageTitle>Additional information</PageTitle>\n            <LinkBox>\n              <StyledLink state={{ from: location.state.from }} to={`cast`}>\n                Cast\n              </StyledLink>\n              <StyledLink state={{ from: location.state.from }} to={`reviews`}>\n                Reviews\n              </StyledLink>\n            </LinkBox>\n\n            <Suspense fallback=\"\">\n              <Outlet />\n            </Suspense>\n          </Section>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Section","styled","axios","params","api_key","getTrendingFilms","response","filmsArray","data","results","toast","getFilmById","filmId","filmsDetails","getFilmCast","filmCast","cast","getFilmReviews","filmReviews","getFilmByQuery","query","filmsByQuery","GoBackLink","Link","Image","FilmDetailsbox","FilmInfoBox","PageTitle","FilmText","FilmSubTitle","StyledLink","LinkBox","location","useLocation","movieId","useParams","useState","filmDetails","setАilmDetails","console","log","useEffect","then","res","genres","title","vote_average","overview","release_date","poster_path","to","state","from","src","alt","substring","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}